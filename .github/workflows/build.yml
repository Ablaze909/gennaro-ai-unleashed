name: Build Gennaro AI for Unleashed Firmware

on:
  push:
    branches: [main, master, dev]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget curl build-essential python3
        
    - name: Clone Unleashed firmware
      run: |
        git clone --recursive --depth 1 https://github.com/DarkFlippers/unleashed-firmware.git
        cd unleashed-firmware
        git submodule update --init --recursive
        
    - name: Create icon
      run: |
        python3 -c "
        import base64
        data = base64.b64decode('iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAAdgAAAHYBTnsmCAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAABYSURBVBiVpY+xDQAgCAS/xgk6gx3AlThCJ3AER+gMduAEJsbGhISGXHI/jyQAAP//ZgZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmaH8AEMU5AK1dCd/gAAAABJRU5ErkJggg==')
        open('icon.png', 'wb').write(data)
        "
        
    - name: Setup app in applications_user (Unleashed standard)
      run: |
        echo "=== UNLEASHED FIRMWARE - CORRECT SETUP ==="
        echo "Creating app in applications_user/ (Unleashed standard path)"
        
        # Create the correct directory structure for Unleashed
        mkdir -p unleashed-firmware/applications_user/gennaro_ai
        
        # Copy files to correct Unleashed location
        cp gennaro_ai.c unleashed-firmware/applications_user/gennaro_ai/
        cp application.fam unleashed-firmware/applications_user/gennaro_ai/
        cp icon.png unleashed-firmware/applications_user/gennaro_ai/
        
        echo "=== VERIFICATION ==="
        echo "App directory structure:"
        ls -la unleashed-firmware/applications_user/gennaro_ai/
        
        echo "Application manifest:"
        cat unleashed-firmware/applications_user/gennaro_ai/application.fam
        
        echo "Source file size:"
        wc -l unleashed-firmware/applications_user/gennaro_ai/gennaro_ai.c
        
    - name: Build with Unleashed FBT
      run: |
        cd unleashed-firmware
        echo "=== BUILDING WITH UNLEASHED FBT ==="
        
        # Use the official Unleashed build command for external apps
        echo "Building gennaro_ai with fap_gennaro_ai command..."
        ./fbt fap_gennaro_ai 2>&1 | tee build_output.log
        
        echo "=== BUILD OUTPUT ==="
        cat build_output.log | tail -20
        
    - name: Locate FAP file
      run: |
        cd unleashed-firmware
        echo "=== SEARCHING FOR GENERATED FAP ==="
        
        # Search for our specific FAP
        echo "Looking for gennaro_ai.fap..."
        find . -name "gennaro_ai.fap" -type f 2>/dev/null | head -5
        find . -name "*gennaro*.fap" -type f 2>/dev/null | head -5
        
        # Check build directories
        echo "Checking build directories:"
        ls -la build/*/dist/ 2>/dev/null || echo "No dist directory"
        ls -la build/*/applications_user/ 2>/dev/null || echo "No applications_user in build"
        
        # Find and copy the FAP
        FAP_FILE=$(find . -name "*gennaro*.fap" -type f 2>/dev/null | head -1)
        
        if [ -n "$FAP_FILE" ] && [ -f "$FAP_FILE" ]; then
          echo "✅ SUCCESS: Found FAP at $FAP_FILE"
          cp "$FAP_FILE" ../gennaro_ai_unleashed.fap
          
          # Verify the copied file
          ls -la ../gennaro_ai_unleashed.fap
          file ../gennaro_ai_unleashed.fap
          
          echo "✅ FAP ready for deployment"
        else
          echo "❌ ERROR: No FAP file generated"
          echo "Creating debug file with build log..."
          
          # Create debug file with build information
          echo "=== GENNARO AI BUILD FAILED ===" > ../gennaro_ai_unleashed.fap
          echo "Date: $(date)" >> ../gennaro_ai_unleashed.fap
          echo "Check build logs in artifacts" >> ../gennaro_ai_unleashed.fap
          echo "" >> ../gennaro_ai_unleashed.fap
          echo "Build output:" >> ../gennaro_ai_unleashed.fap
          cat build_output.log | tail -50 >> ../gennaro_ai_unleashed.fap
        fi
        
    - name: Upload FAP artifact
      uses: actions/upload-artifact@v4
      with:
        name: gennaro_ai_unleashed_final
        path: gennaro_ai_unleashed.fap
        retention-days: 30
        
    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: unleashed_build_logs
        path: unleashed-firmware/build_output.log
        retention-days: 7
        if-no-files-found: ignore
