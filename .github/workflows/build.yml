name: Build Gennaro AI FAP for Official Firmware (Alternative)

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-official:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget curl build-essential python3 python3-pip
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Clone Official Flipper firmware
      run: |
        echo "Cloning Official Flipper firmware (more stable)"
        git clone --recursive --depth 1 https://github.com/flipperdevices/flipperzero-firmware.git
        cd flipperzero-firmware
        git submodule update --init --recursive
        
    - name: Verify FBT tool
      run: |
        cd flipperzero-firmware
        ./fbt --help
        
    - name: Create application icon
      run: |
        echo "Creating application icon"
        python3 -c "
        import base64
        png_data = base64.b64decode('iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAAdgAAAHYBTnsmCAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAABYSURBVBiVpY+xDQAgCAS/xgk6gx3AlThCJ3AER+gMduAEJsbGhISGXHI/jyQAAP//ZgZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmaH8AEMU5AK1dCd/gAAAABJRU5ErkJggg==')
        with open('icon.png', 'wb') as f:
            f.write(png_data)
        print('Icon created successfully')
        "
        
    - name: Create clean app directory
      run: |
        echo "Creating clean app directory"
        rm -rf flipperzero-firmware/applications/external/gennaro_ai
        mkdir -p flipperzero-firmware/applications/external/gennaro_ai
        
    - name: Copy application files
      run: |
        echo "Copying application files to Official firmware"
        cp gennaro_ai.c flipperzero-firmware/applications/external/gennaro_ai/
        cp application.fam flipperzero-firmware/applications/external/gennaro_ai/
        cp icon.png flipperzero-firmware/applications/external/gennaro_ai/
        
        echo "Verifying files in Official firmware"
        ls -la flipperzero-firmware/applications/external/gennaro_ai/
        cat flipperzero-firmware/applications/external/gennaro_ai/application.fam
        
    - name: Build with Official Firmware
      run: |
        cd flipperzero-firmware
        echo "Building with Official Flipper firmware"
        
        # Official firmware uses standard commands
        echo "=== Building all external applications ==="
        ./fbt fap_dist 2>&1 | tee official_build.log || {
          echo "fap_dist failed, trying faps"
          ./fbt faps 2>&1 | tee official_fallback.log || echo "Both methods failed"
        }
        
    - name: Locate Official FAP
      run: |
        cd flipperzero-firmware
        echo "Searching for FAP in Official build"
        
        find . -name "*gennaro*.fap" -type f -exec ls -lah {} \;
        
        # Official firmware locations
        ls -la build/f*/dist/faps/ 2>/dev/null | grep -i gennaro || echo "No gennaro in official dist"
        
        # Copy FAP if found
        FAP_FILE=$(find . -name "*gennaro*.fap" -type f | head -1)
        if [ -n "$FAP_FILE" ]; then
          echo "Found Official FAP: $FAP_FILE"
          cp "$FAP_FILE" ../gennaro_ai_official.fap
          ls -lah ../gennaro_ai_official.fap
        fi
        
    - name: Upload Official FAP
      uses: actions/upload-artifact@v4
      with:
        name: gennaro_ai_official_firmware
        path: "gennaro_ai_official.fap"
        retention-days: 30
        if-no-files-found: warn
