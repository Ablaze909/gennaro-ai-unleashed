name: Build Gennaro AI FAP for Unleashed

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget curl build-essential python3 python3-pip
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Clone Unleashed firmware
      run: |
        git clone --recursive --depth 1 https://github.com/DarkFlippers/unleashed-firmware.git
        cd unleashed-firmware
        git submodule update --init --recursive
        
    - name: Setup FBT environment
      run: |
        cd unleashed-firmware
        chmod +x ./fbt
        python3 -m pip install --upgrade pip
        python3 -m pip install scons
        
    - name: Test FBT basic functionality
      run: |
        cd unleashed-firmware
        echo "Testing FBT"
        ./fbt --help || echo "FBT help failed"
        ./fbt --version || echo "FBT version check failed"
        
    - name: Create app directory
      run: |
        mkdir -p unleashed-firmware/applications/external/gennaro_ai
        ls -la unleashed-firmware/applications/external/
        
    - name: Copy application files
      run: |
        cp application.fam unleashed-firmware/applications/external/gennaro_ai/
        cp gennaro_ai.c unleashed-firmware/applications/external/gennaro_ai/
        ls -la unleashed-firmware/applications/external/gennaro_ai/
        
    - name: Create icon file
      run: |
        cd unleashed-firmware/applications/external/gennaro_ai
        python3 -c "import base64; open('icon.png', 'wb').write(base64.b64decode('iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChAGA8RFrJgAAAABJRU5ErkJggg=='))"
        ls -la icon.png
        
    - name: Fix application.fam
      run: |
        cd unleashed-firmware/applications/external/gennaro_ai
        cat > application.fam << 'EOF'
        App(
            appid="gennaro_ai",
            name="Gennaro AI",
            apptype=FlipperAppType.EXTERNAL,
            entry_point="gennaro_ai_app",
            requires=[
                "gui",
                "notification",
            ],
            stack_size=8 * 1024,
            order=20,
            fap_category="GPIO",
            fap_author="GennaroAI Team",
            fap_version="1.0",
            fap_description="AI Vision Assistant with ESP32-CAM support",
            fap_icon="icon.png",
        )
        EOF
        
    - name: Build FAP
      run: |
        cd unleashed-firmware
        ./fbt fap_gennaro_ai
        
    - name: Alternative build
      if: failure()
      run: |
        cd unleashed-firmware
        ./fbt faps
        
    - name: Find FAP files
      run: |
        cd unleashed-firmware
        find . -name "gennaro_ai.fap" -type f
        find . -name "*.fap" -type f | head -10
        
    - name: Copy FAP
      run: |
        cd unleashed-firmware
        find . -name "gennaro_ai.fap" -type f -exec cp {} ../gennaro_ai.fap \;
        cd ..
        ls -la *.fap || echo "No FAP files found"
        
    - name: Upload FAP
      uses: actions/upload-artifact@v4
      with:
        name: gennaro_ai_unleashed_fap
        path: "*.fap"
        retention-days: 30
        if-no-files-found: warn
        
    - name: Upload debug logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: unleashed_build_debug
        path: unleashed-firmware/build/
        retention-days: 7
        if-no-files-found: ignore
